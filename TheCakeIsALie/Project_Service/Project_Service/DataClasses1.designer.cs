#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Project_Service
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Project_Database")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertInv_Game(Inv_Game instance);
    partial void UpdateInv_Game(Inv_Game instance);
    partial void DeleteInv_Game(Inv_Game instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertInvoice(Invoice instance);
    partial void UpdateInvoice(Invoice instance);
    partial void DeleteInvoice(Invoice instance);
    partial void InsertGame(Game instance);
    partial void UpdateGame(Game instance);
    partial void DeleteGame(Game instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["Project_DatabaseConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Inv_Game> Inv_Games
		{
			get
			{
				return this.GetTable<Inv_Game>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<Invoice> Invoices
		{
			get
			{
				return this.GetTable<Invoice>();
			}
		}
		
		public System.Data.Linq.Table<Game> Games
		{
			get
			{
				return this.GetTable<Game>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Inv_Game")]
	public partial class Inv_Game : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Inv_Game_Id;
		
		private int _Game_Id;
		
		private int _Inv_Id;
		
		private int _Quantity;
		
		private decimal _Cost;
		
		private EntityRef<Invoice> _Invoice;
		
		private EntityRef<Game> _Game;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInv_Game_IdChanging(int value);
    partial void OnInv_Game_IdChanged();
    partial void OnGame_IdChanging(int value);
    partial void OnGame_IdChanged();
    partial void OnInv_IdChanging(int value);
    partial void OnInv_IdChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    partial void OnCostChanging(decimal value);
    partial void OnCostChanged();
    #endregion
		
		public Inv_Game()
		{
			this._Invoice = default(EntityRef<Invoice>);
			this._Game = default(EntityRef<Game>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Inv_Game_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Inv_Game_Id
		{
			get
			{
				return this._Inv_Game_Id;
			}
			set
			{
				if ((this._Inv_Game_Id != value))
				{
					this.OnInv_Game_IdChanging(value);
					this.SendPropertyChanging();
					this._Inv_Game_Id = value;
					this.SendPropertyChanged("Inv_Game_Id");
					this.OnInv_Game_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Game_Id", DbType="Int NOT NULL")]
		public int Game_Id
		{
			get
			{
				return this._Game_Id;
			}
			set
			{
				if ((this._Game_Id != value))
				{
					if (this._Game.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGame_IdChanging(value);
					this.SendPropertyChanging();
					this._Game_Id = value;
					this.SendPropertyChanged("Game_Id");
					this.OnGame_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Inv_Id", DbType="Int NOT NULL")]
		public int Inv_Id
		{
			get
			{
				return this._Inv_Id;
			}
			set
			{
				if ((this._Inv_Id != value))
				{
					if (this._Invoice.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInv_IdChanging(value);
					this.SendPropertyChanging();
					this._Inv_Id = value;
					this.SendPropertyChanged("Inv_Id");
					this.OnInv_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="Money NOT NULL")]
		public decimal Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this.OnCostChanging(value);
					this.SendPropertyChanging();
					this._Cost = value;
					this.SendPropertyChanged("Cost");
					this.OnCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Invoice_Inv_Game", Storage="_Invoice", ThisKey="Inv_Id", OtherKey="Inv_Id", IsForeignKey=true)]
		public Invoice Invoice
		{
			get
			{
				return this._Invoice.Entity;
			}
			set
			{
				Invoice previousValue = this._Invoice.Entity;
				if (((previousValue != value) 
							|| (this._Invoice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Invoice.Entity = null;
						previousValue.Inv_Games.Remove(this);
					}
					this._Invoice.Entity = value;
					if ((value != null))
					{
						value.Inv_Games.Add(this);
						this._Inv_Id = value.Inv_Id;
					}
					else
					{
						this._Inv_Id = default(int);
					}
					this.SendPropertyChanged("Invoice");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Game_Inv_Game", Storage="_Game", ThisKey="Game_Id", OtherKey="Game_Id", IsForeignKey=true)]
		public Game Game
		{
			get
			{
				return this._Game.Entity;
			}
			set
			{
				Game previousValue = this._Game.Entity;
				if (((previousValue != value) 
							|| (this._Game.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Game.Entity = null;
						previousValue.Inv_Games.Remove(this);
					}
					this._Game.Entity = value;
					if ((value != null))
					{
						value.Inv_Games.Add(this);
						this._Game_Id = value.Game_Id;
					}
					else
					{
						this._Game_Id = default(int);
					}
					this.SendPropertyChanged("Game");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[User]")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _User_ID;
		
		private string _USer_Type;
		
		private string _User_FirstName;
		
		private string _User_Name;
		
		private string _User_Surname;
		
		private string _User_Email;
		
		private string _User_Password;
		
		private string _User_Cellphone;
		
		private string _User_Address;
		
		private EntitySet<Invoice> _Invoices;
		
		private EntitySet<Game> _Games;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUser_IDChanging(int value);
    partial void OnUser_IDChanged();
    partial void OnUSer_TypeChanging(string value);
    partial void OnUSer_TypeChanged();
    partial void OnUser_FirstNameChanging(string value);
    partial void OnUser_FirstNameChanged();
    partial void OnUser_NameChanging(string value);
    partial void OnUser_NameChanged();
    partial void OnUser_SurnameChanging(string value);
    partial void OnUser_SurnameChanged();
    partial void OnUser_EmailChanging(string value);
    partial void OnUser_EmailChanged();
    partial void OnUser_PasswordChanging(string value);
    partial void OnUser_PasswordChanged();
    partial void OnUser_CellphoneChanging(string value);
    partial void OnUser_CellphoneChanged();
    partial void OnUser_AddressChanging(string value);
    partial void OnUser_AddressChanged();
    #endregion
		
		public User()
		{
			this._Invoices = new EntitySet<Invoice>(new Action<Invoice>(this.attach_Invoices), new Action<Invoice>(this.detach_Invoices));
			this._Games = new EntitySet<Game>(new Action<Game>(this.attach_Games), new Action<Game>(this.detach_Games));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int User_ID
		{
			get
			{
				return this._User_ID;
			}
			set
			{
				if ((this._User_ID != value))
				{
					this.OnUser_IDChanging(value);
					this.SendPropertyChanging();
					this._User_ID = value;
					this.SendPropertyChanged("User_ID");
					this.OnUser_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USer_Type", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string USer_Type
		{
			get
			{
				return this._USer_Type;
			}
			set
			{
				if ((this._USer_Type != value))
				{
					this.OnUSer_TypeChanging(value);
					this.SendPropertyChanging();
					this._USer_Type = value;
					this.SendPropertyChanged("USer_Type");
					this.OnUSer_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_FirstName", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string User_FirstName
		{
			get
			{
				return this._User_FirstName;
			}
			set
			{
				if ((this._User_FirstName != value))
				{
					this.OnUser_FirstNameChanging(value);
					this.SendPropertyChanging();
					this._User_FirstName = value;
					this.SendPropertyChanged("User_FirstName");
					this.OnUser_FirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string User_Name
		{
			get
			{
				return this._User_Name;
			}
			set
			{
				if ((this._User_Name != value))
				{
					this.OnUser_NameChanging(value);
					this.SendPropertyChanging();
					this._User_Name = value;
					this.SendPropertyChanged("User_Name");
					this.OnUser_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Surname", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string User_Surname
		{
			get
			{
				return this._User_Surname;
			}
			set
			{
				if ((this._User_Surname != value))
				{
					this.OnUser_SurnameChanging(value);
					this.SendPropertyChanging();
					this._User_Surname = value;
					this.SendPropertyChanged("User_Surname");
					this.OnUser_SurnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Email", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string User_Email
		{
			get
			{
				return this._User_Email;
			}
			set
			{
				if ((this._User_Email != value))
				{
					this.OnUser_EmailChanging(value);
					this.SendPropertyChanging();
					this._User_Email = value;
					this.SendPropertyChanged("User_Email");
					this.OnUser_EmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string User_Password
		{
			get
			{
				return this._User_Password;
			}
			set
			{
				if ((this._User_Password != value))
				{
					this.OnUser_PasswordChanging(value);
					this.SendPropertyChanging();
					this._User_Password = value;
					this.SendPropertyChanged("User_Password");
					this.OnUser_PasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Cellphone", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string User_Cellphone
		{
			get
			{
				return this._User_Cellphone;
			}
			set
			{
				if ((this._User_Cellphone != value))
				{
					this.OnUser_CellphoneChanging(value);
					this.SendPropertyChanging();
					this._User_Cellphone = value;
					this.SendPropertyChanged("User_Cellphone");
					this.OnUser_CellphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Address", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string User_Address
		{
			get
			{
				return this._User_Address;
			}
			set
			{
				if ((this._User_Address != value))
				{
					this.OnUser_AddressChanging(value);
					this.SendPropertyChanging();
					this._User_Address = value;
					this.SendPropertyChanged("User_Address");
					this.OnUser_AddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Invoice", Storage="_Invoices", ThisKey="User_ID", OtherKey="User_ID")]
		public EntitySet<Invoice> Invoices
		{
			get
			{
				return this._Invoices;
			}
			set
			{
				this._Invoices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Game", Storage="_Games", ThisKey="User_ID", OtherKey="User_ID")]
		public EntitySet<Game> Games
		{
			get
			{
				return this._Games;
			}
			set
			{
				this._Games.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Invoices(Invoice entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Invoices(Invoice entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Games(Game entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Games(Game entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Invoice")]
	public partial class Invoice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Inv_Id;
		
		private decimal _Total_Cost;
		
		private string _Shopping_Status;
		
		private int _User_ID;
		
		private System.DateTime _Date_Logged;
		
		private EntitySet<Inv_Game> _Inv_Games;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInv_IdChanging(int value);
    partial void OnInv_IdChanged();
    partial void OnTotal_CostChanging(decimal value);
    partial void OnTotal_CostChanged();
    partial void OnShopping_StatusChanging(string value);
    partial void OnShopping_StatusChanged();
    partial void OnUser_IDChanging(int value);
    partial void OnUser_IDChanged();
    partial void OnDate_LoggedChanging(System.DateTime value);
    partial void OnDate_LoggedChanged();
    #endregion
		
		public Invoice()
		{
			this._Inv_Games = new EntitySet<Inv_Game>(new Action<Inv_Game>(this.attach_Inv_Games), new Action<Inv_Game>(this.detach_Inv_Games));
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Inv_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Inv_Id
		{
			get
			{
				return this._Inv_Id;
			}
			set
			{
				if ((this._Inv_Id != value))
				{
					this.OnInv_IdChanging(value);
					this.SendPropertyChanging();
					this._Inv_Id = value;
					this.SendPropertyChanged("Inv_Id");
					this.OnInv_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total_Cost", DbType="Money NOT NULL")]
		public decimal Total_Cost
		{
			get
			{
				return this._Total_Cost;
			}
			set
			{
				if ((this._Total_Cost != value))
				{
					this.OnTotal_CostChanging(value);
					this.SendPropertyChanging();
					this._Total_Cost = value;
					this.SendPropertyChanged("Total_Cost");
					this.OnTotal_CostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Shopping_Status", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Shopping_Status
		{
			get
			{
				return this._Shopping_Status;
			}
			set
			{
				if ((this._Shopping_Status != value))
				{
					this.OnShopping_StatusChanging(value);
					this.SendPropertyChanging();
					this._Shopping_Status = value;
					this.SendPropertyChanged("Shopping_Status");
					this.OnShopping_StatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_ID", DbType="Int NOT NULL")]
		public int User_ID
		{
			get
			{
				return this._User_ID;
			}
			set
			{
				if ((this._User_ID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUser_IDChanging(value);
					this.SendPropertyChanging();
					this._User_ID = value;
					this.SendPropertyChanged("User_ID");
					this.OnUser_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date_Logged", DbType="Date NOT NULL")]
		public System.DateTime Date_Logged
		{
			get
			{
				return this._Date_Logged;
			}
			set
			{
				if ((this._Date_Logged != value))
				{
					this.OnDate_LoggedChanging(value);
					this.SendPropertyChanging();
					this._Date_Logged = value;
					this.SendPropertyChanged("Date_Logged");
					this.OnDate_LoggedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Invoice_Inv_Game", Storage="_Inv_Games", ThisKey="Inv_Id", OtherKey="Inv_Id")]
		public EntitySet<Inv_Game> Inv_Games
		{
			get
			{
				return this._Inv_Games;
			}
			set
			{
				this._Inv_Games.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Invoice", Storage="_User", ThisKey="User_ID", OtherKey="User_ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Invoices.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Invoices.Add(this);
						this._User_ID = value.User_ID;
					}
					else
					{
						this._User_ID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Inv_Games(Inv_Game entity)
		{
			this.SendPropertyChanging();
			entity.Invoice = this;
		}
		
		private void detach_Inv_Games(Inv_Game entity)
		{
			this.SendPropertyChanging();
			entity.Invoice = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Game")]
	public partial class Game : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Game_Id;
		
		private string _Game_Title;
		
		private string _Game_Type;
		
		private string _Game_Descrp;
		
		private int _Game_Rating;
		
		private int _Game_Quantity;
		
		private int _Game_Num_Comments;
		
		private System.DateTime _Game_Date_Added;
		
		private int _Game_Status;
		
		private string _Game_Image;
		
		private string _Game_Trailer;
		
		private decimal _Game_price;
		
		private decimal _Discount_Percentage;
		
		private int _User_ID;
		
		private EntitySet<Inv_Game> _Inv_Games;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGame_IdChanging(int value);
    partial void OnGame_IdChanged();
    partial void OnGame_TitleChanging(string value);
    partial void OnGame_TitleChanged();
    partial void OnGame_TypeChanging(string value);
    partial void OnGame_TypeChanged();
    partial void OnGame_DescrpChanging(string value);
    partial void OnGame_DescrpChanged();
    partial void OnGame_RatingChanging(int value);
    partial void OnGame_RatingChanged();
    partial void OnGame_QuantityChanging(int value);
    partial void OnGame_QuantityChanged();
    partial void OnGame_Num_CommentsChanging(int value);
    partial void OnGame_Num_CommentsChanged();
    partial void OnGame_Date_AddedChanging(System.DateTime value);
    partial void OnGame_Date_AddedChanged();
    partial void OnGame_StatusChanging(int value);
    partial void OnGame_StatusChanged();
    partial void OnGame_ImageChanging(string value);
    partial void OnGame_ImageChanged();
    partial void OnGame_TrailerChanging(string value);
    partial void OnGame_TrailerChanged();
    partial void OnGame_priceChanging(decimal value);
    partial void OnGame_priceChanged();
    partial void OnDiscount_PercentageChanging(decimal value);
    partial void OnDiscount_PercentageChanged();
    partial void OnUser_IDChanging(int value);
    partial void OnUser_IDChanged();
    #endregion
		
		public Game()
		{
			this._Inv_Games = new EntitySet<Inv_Game>(new Action<Inv_Game>(this.attach_Inv_Games), new Action<Inv_Game>(this.detach_Inv_Games));
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Game_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Game_Id
		{
			get
			{
				return this._Game_Id;
			}
			set
			{
				if ((this._Game_Id != value))
				{
					this.OnGame_IdChanging(value);
					this.SendPropertyChanging();
					this._Game_Id = value;
					this.SendPropertyChanged("Game_Id");
					this.OnGame_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Game_Title", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Game_Title
		{
			get
			{
				return this._Game_Title;
			}
			set
			{
				if ((this._Game_Title != value))
				{
					this.OnGame_TitleChanging(value);
					this.SendPropertyChanging();
					this._Game_Title = value;
					this.SendPropertyChanged("Game_Title");
					this.OnGame_TitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Game_Type", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Game_Type
		{
			get
			{
				return this._Game_Type;
			}
			set
			{
				if ((this._Game_Type != value))
				{
					this.OnGame_TypeChanging(value);
					this.SendPropertyChanging();
					this._Game_Type = value;
					this.SendPropertyChanged("Game_Type");
					this.OnGame_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Game_Descrp", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Game_Descrp
		{
			get
			{
				return this._Game_Descrp;
			}
			set
			{
				if ((this._Game_Descrp != value))
				{
					this.OnGame_DescrpChanging(value);
					this.SendPropertyChanging();
					this._Game_Descrp = value;
					this.SendPropertyChanged("Game_Descrp");
					this.OnGame_DescrpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Game_Rating", DbType="Int NOT NULL")]
		public int Game_Rating
		{
			get
			{
				return this._Game_Rating;
			}
			set
			{
				if ((this._Game_Rating != value))
				{
					this.OnGame_RatingChanging(value);
					this.SendPropertyChanging();
					this._Game_Rating = value;
					this.SendPropertyChanged("Game_Rating");
					this.OnGame_RatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Game_Quantity", DbType="Int NOT NULL")]
		public int Game_Quantity
		{
			get
			{
				return this._Game_Quantity;
			}
			set
			{
				if ((this._Game_Quantity != value))
				{
					this.OnGame_QuantityChanging(value);
					this.SendPropertyChanging();
					this._Game_Quantity = value;
					this.SendPropertyChanged("Game_Quantity");
					this.OnGame_QuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Game_Num_Comments", DbType="Int NOT NULL")]
		public int Game_Num_Comments
		{
			get
			{
				return this._Game_Num_Comments;
			}
			set
			{
				if ((this._Game_Num_Comments != value))
				{
					this.OnGame_Num_CommentsChanging(value);
					this.SendPropertyChanging();
					this._Game_Num_Comments = value;
					this.SendPropertyChanged("Game_Num_Comments");
					this.OnGame_Num_CommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Game_Date_Added", DbType="Date NOT NULL")]
		public System.DateTime Game_Date_Added
		{
			get
			{
				return this._Game_Date_Added;
			}
			set
			{
				if ((this._Game_Date_Added != value))
				{
					this.OnGame_Date_AddedChanging(value);
					this.SendPropertyChanging();
					this._Game_Date_Added = value;
					this.SendPropertyChanged("Game_Date_Added");
					this.OnGame_Date_AddedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Game_Status", DbType="Int NOT NULL")]
		public int Game_Status
		{
			get
			{
				return this._Game_Status;
			}
			set
			{
				if ((this._Game_Status != value))
				{
					this.OnGame_StatusChanging(value);
					this.SendPropertyChanging();
					this._Game_Status = value;
					this.SendPropertyChanged("Game_Status");
					this.OnGame_StatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Game_Image", DbType="VarChar(50)", CanBeNull=false)]
		public string Game_Image
		{
			get
			{
				return this._Game_Image;
			}
			set
			{
				if ((this._Game_Image != value))
				{
					this.OnGame_ImageChanging(value);
					this.SendPropertyChanging();
					this._Game_Image = value;
					this.SendPropertyChanged("Game_Image");
					this.OnGame_ImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Game_Trailer", DbType="VarChar(50)", CanBeNull=false)]
		public string Game_Trailer
		{
			get
			{
				return this._Game_Trailer;
			}
			set
			{
				if ((this._Game_Trailer != value))
				{
					this.OnGame_TrailerChanging(value);
					this.SendPropertyChanging();
					this._Game_Trailer = value;
					this.SendPropertyChanged("Game_Trailer");
					this.OnGame_TrailerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Game_price", DbType="Money NOT NULL")]
		public decimal Game_price
		{
			get
			{
				return this._Game_price;
			}
			set
			{
				if ((this._Game_price != value))
				{
					this.OnGame_priceChanging(value);
					this.SendPropertyChanging();
					this._Game_price = value;
					this.SendPropertyChanged("Game_price");
					this.OnGame_priceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount_Percentage", DbType="Decimal(18,0) NOT NULL")]
		public decimal Discount_Percentage
		{
			get
			{
				return this._Discount_Percentage;
			}
			set
			{
				if ((this._Discount_Percentage != value))
				{
					this.OnDiscount_PercentageChanging(value);
					this.SendPropertyChanging();
					this._Discount_Percentage = value;
					this.SendPropertyChanged("Discount_Percentage");
					this.OnDiscount_PercentageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_ID", DbType="Int NOT NULL")]
		public int User_ID
		{
			get
			{
				return this._User_ID;
			}
			set
			{
				if ((this._User_ID != value))
				{
					//if (this._User.HasLoadedOrAssignedValue)
					////{
					//	throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					//}
					this.OnUser_IDChanging(value);
					this.SendPropertyChanging();
					this._User_ID = value;
					this.SendPropertyChanged("User_ID");
					this.OnUser_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Game_Inv_Game", Storage="_Inv_Games", ThisKey="Game_Id", OtherKey="Game_Id")]
		public EntitySet<Inv_Game> Inv_Games
		{
			get
			{
				return this._Inv_Games;
			}
			set
			{
				this._Inv_Games.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Game", Storage="_User", ThisKey="User_ID", OtherKey="User_ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Games.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Games.Add(this);
						this._User_ID = value.User_ID;
					}
					else
					{
						this._User_ID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Inv_Games(Inv_Game entity)
		{
			this.SendPropertyChanging();
			entity.Game = this;
		}
		
		private void detach_Inv_Games(Inv_Game entity)
		{
			this.SendPropertyChanging();
			entity.Game = null;
		}
	}
}
#pragma warning restore 1591
